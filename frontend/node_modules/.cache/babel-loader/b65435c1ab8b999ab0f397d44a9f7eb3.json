{"ast":null,"code":"var _jsxFileName = \"/home/filip/Desktop/facial-animation/src/components/AudioRecorder.js\";\nimport React, { Component } from 'react';\nimport { ReactMic } from 'react-mic';\nimport './AudioRecorder.css';\n\nclass AudioRecorder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startRecording = () => {\n      this.setState({\n        record: true\n      });\n    };\n\n    this.stopRecording = () => {\n      this.setState({\n        record: false\n      });\n    };\n\n    this.onData = recordedBlob => {// console.log('chunk of real-time data is: ', recordedBlob);\n    };\n\n    this.onStop = recordedBlob => {\n      console.log('recordedBlob is: ', recordedBlob);\n      this.props.newRecording(new File([recordedBlob.blob], \"recording.wav\", {\n        type: 'audio/wav',\n        lastModified: Date.now()\n      })); // this.props.newRecording(recordedBlob.blobURL)\n    };\n\n    this.onSave = recordedBlob => {\n      this.setState({\n        downloadLinkURL: recordedBlob.blobURL\n      });\n    };\n\n    this.state = {\n      record: false,\n      downloadLinkURL: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"recorder-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactMic, {\n      record: this.state.record,\n      className: \"sound-wave\",\n      onStop: this.onStop,\n      onData: this.onData,\n      onSave: this.onSave,\n      strokeColor: \"#000000\",\n      backgroundColor: \"#FFFFFF\",\n      mimeType: \"audio/wav\",\n      width: 100,\n      height: 50,\n      noiseSuppression: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"record-button record\",\n      onClick: this.startRecording,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"record-button record\",\n      onClick: this.stopRecording,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Stop\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"record\",\n      href: this.state.downloadLinkURL,\n      download: \"recording.wav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Download\"));\n  }\n\n}\n\nexport default AudioRecorder;","map":{"version":3,"sources":["/home/filip/Desktop/facial-animation/src/components/AudioRecorder.js"],"names":["React","Component","ReactMic","AudioRecorder","constructor","props","startRecording","setState","record","stopRecording","onData","recordedBlob","onStop","console","log","newRecording","File","blob","type","lastModified","Date","now","onSave","downloadLinkURL","blobURL","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAO,qBAAP;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACC,SAAlC,CAA4C;AAC1CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,cARmB,GAQF,MAAM;AACrB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAVkB;;AAAA,SAYnBC,aAZmB,GAYH,MAAM;AACpB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAdkB;;AAAA,SAgBnBE,MAhBmB,GAgBTC,YAAD,IAAkB,CACzB;AACD,KAlBkB;;AAAA,SAoBnBC,MApBmB,GAoBTD,YAAD,IAAkB;AACzBE,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,YAAjC;AACA,WAAKN,KAAL,CAAWU,YAAX,CAAwB,IAAIC,IAAJ,CAAS,CAACL,YAAY,CAACM,IAAd,CAAT,EAA8B,eAA9B,EAA+C;AAACC,QAAAA,IAAI,EAAE,WAAP;AAAoBC,QAAAA,YAAY,EAAEC,IAAI,CAACC,GAAL;AAAlC,OAA/C,CAAxB,EAFyB,CAGzB;AAED,KAzBkB;;AAAA,SA2BnBC,MA3BmB,GA2BTX,YAAD,IAAkB;AACzB,WAAKJ,QAAL,CAAc;AACVgB,QAAAA,eAAe,EAAEZ,YAAY,CAACa;AADpB,OAAd;AAGD,KA/BkB;;AAEjB,SAAKC,KAAL,GAAa;AACXjB,MAAAA,MAAM,EAAE,KADG;AAEXe,MAAAA,eAAe,EAAE;AAFN,KAAb;AAID;;AA2BDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWjB,MADrB;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,MAAM,EAAE,KAAKI,MAHf;AAIE,MAAA,MAAM,EAAE,KAAKF,MAJf;AAKE,MAAA,MAAM,EAAE,KAAKY,MALf;AAME,MAAA,WAAW,EAAC,SANd;AAOE,MAAA,eAAe,EAAC,SAPlB;AAQE,MAAA,QAAQ,EAAC,WARX;AASE,MAAA,KAAK,EAAE,GATT;AAUE,MAAA,MAAM,EAAE,EAVV;AAWE,MAAA,gBAAgB,EAAE,IAXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAaE;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,OAAO,EAAE,KAAKhB,cAAvD;AAAuE,MAAA,IAAI,EAAC,QAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbF,eAcE;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,OAAO,EAAE,KAAKG,aAAvD;AAAsE,MAAA,IAAI,EAAC,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAG,MAAA,SAAS,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAE,KAAKgB,KAAL,CAAWF,eAAvC;AAAwD,MAAA,QAAQ,EAAC,eAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,CADF;AAmBD;;AAtDyC;;AAyD5C,eAAepB,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport { ReactMic } from 'react-mic';\nimport './AudioRecorder.css'\n\nclass AudioRecorder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: false,\n      downloadLinkURL: null\n    }\n  }\n\n  startRecording = () => {\n    this.setState({ record: true });\n  }\n\n  stopRecording = () => {\n    this.setState({ record: false });\n  }\n\n  onData = (recordedBlob) => {\n    // console.log('chunk of real-time data is: ', recordedBlob);\n  }\n\n  onStop = (recordedBlob) => {\n    console.log('recordedBlob is: ', recordedBlob);\n    this.props.newRecording(new File([recordedBlob.blob], \"recording.wav\", {type: 'audio/wav', lastModified: Date.now()}))\n    // this.props.newRecording(recordedBlob.blobURL)\n\n  }\n\n  onSave = (recordedBlob) => {\n    this.setState({\n        downloadLinkURL: recordedBlob.blobURL\n    })\n  }\n\n  render() {\n    return (\n      <div id=\"recorder-container\">\n        <ReactMic\n          record={this.state.record}\n          className=\"sound-wave\"\n          onStop={this.onStop}\n          onData={this.onData}\n          onSave={this.onSave}\n          strokeColor=\"#000000\"\n          backgroundColor=\"#FFFFFF\"\n          mimeType=\"audio/wav\"\n          width={100}\n          height={50}\n          noiseSuppression={true}  />\n        <button className=\"record-button record\" onClick={this.startRecording} type=\"button\">Start</button>\n        <button className=\"record-button record\" onClick={this.stopRecording} type=\"button\">Stop</button>\n        <a className=\"record\" href={this.state.downloadLinkURL} download=\"recording.wav\">Download</a>\n      </div>\n    );\n  }\n}\n\nexport default AudioRecorder"]},"metadata":{},"sourceType":"module"}